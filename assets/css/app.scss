$bg: #0B486B;
$bg-opacity: 0.9;
$text: #fff;
$white: #fff;
$black: #000;
$gray: #666;
$red: #cc241d;
$z-index-overlay: 10;
$z-index-logo: 100;

$player-1-color: #fb4934;
$player-2-color: #b8bb26;
$player-3-color: #fabd2f;
$player-4-color: #458588;
$player-5-color: #d3869b;
$player-6-color: #fe8019;
$player-7-color: #8ec07c;
$player-8-color: #3c3836;

* {
  box-sizing: border-box;
}

html {
  min-height: 100%;
}

body {
  min-height: 100%;
  background: linear-gradient(rgba(mix($bg, $white, 90%), $bg-opacity), rgba($bg, $bg-opacity)),
              url('/images/waves.svg');
  color: $text;
  font-family: 'Crimson Text', serif;
}

h1 {
  font-size: 3em;
}

h2 {
  margin: 0;
  text-transform: uppercase;
  letter-spacing: .1em;
  font-size: 1em;
}

form {
  font-size: inherit;
}

.App {
  max-width: 60em;
  margin: 0 auto;
}

.Icon {
  width: 1em;
  height: 1em;
  display: inline-block;
  vertical-align: bottom;
}

.Players {
  list-style: none;
  margin: 0 0 1em;
  padding: 0;
  color: $white;
  text-shadow: 0 -1px 1px rgba(0, 0, 0, .2);
}

.Player {
  padding: .75em;
  margin: 0;
  display: flex;
  line-height: 1;
  justify-content: space-between;
  transition: padding 0.1s ease;

  &-type {
    font-size: .5em;
    text-transform: uppercase;
    letter-spacing: .1em;
    margin-left: 1em;
    font-family: sans-serif;
    font-weight: normal;
    display: inline-block;
    background: rgba(0, 0, 0, .1);
    padding: .5em;
    border-radius: .25em;
  }

  &--current {
    padding-top: 1.5em;
    padding-bottom: 1.5em;
  }

  &--inactive {
    opacity: 0.5;
  }

  .Icon {
    margin-left: .25em;
  }
}

.Board {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin proportional-box($a: 1, $b: $a) {
  position: absolute;
  top: 0;
  left: calc(40vw - #{$a/$b/2*100vh});
  width: $a/$b*100vh;
  height: 100vh;

  @media (max-aspect-ratio: 650/406) {
    top: calc(50vh - #{$b/$a/2*80vw});
    left: 0;
    width: 80vw;
    height: $b/$a*80vw;
  }
}

.Tiles {
  list-style: none;
  margin: 0;
  padding: 0;
  @include proportional-box(650, 508);
}

$tile-row-height: 10.75%;

@for $i from 1 through 9 {
  #tile_#{$i} {
    top: 0 * $tile-row-height;
    left: ((100 / 10) * ($i - 1) + (100 / 20)) * 1%;
  }
}

@for $i from 10 through 19 {
  #tile_#{$i} {
    top: 1 * $tile-row-height;
    left: ((100 / 10) * ($i - 10)) * 1%;
  }
}

@for $i from 20 through 28 {
  #tile_#{$i} {
    top: 2 * $tile-row-height;
    left: ((100 / 10) * ($i - 20) + (100 / 20)) * 1%;
  }
}

@for $i from 29 through 38 {
  #tile_#{$i} {
    top: 3 * $tile-row-height;
    left: ((100 / 10) * ($i - 29)) * 1%;
  }
}

@for $i from 39 through 47 {
  #tile_#{$i} {
    top: 4 * $tile-row-height;
    left: ((100 / 10) * ($i - 39) + (100 / 20)) * 1%;
  }
}

@for $i from 48 through 57 {
  #tile_#{$i} {
    top: 5 * $tile-row-height;
    left: ((100 / 10) * ($i - 48)) * 1%;
  }
}

@for $i from 58 through 66 {
  #tile_#{$i} {
    top: 6 * $tile-row-height;
    left: ((100 / 10) * ($i - 58) + (100 / 20)) * 1%;
  }
}

@for $i from 67 through 76 {
  #tile_#{$i} {
    top: 7 * $tile-row-height;
    left: ((100 / 10) * ($i - 67)) * 1%;
  }
}

@for $i from 77 through 85 {
  #tile_#{$i} {
    top: 8 * $tile-row-height;
    left: ((100 / 10) * ($i - 77) + (100 / 20)) * 1%;
  }
}

$tile-width: (100 / 10) * 1%;
$tile-height: $tile-width * 1.1547005; // ratio of circumradius to inradius

.Tile {
  position: absolute;
  width: $tile-width;
  height: $tile-height;
  transition: transform ease-in-out 0.1s;

  svg {
    fill: #fbf1c7;
    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, .25));
    overflow: visible;
  }

  &--selected {
    stroke: rgba(255,255,255,.5);
    stroke-width: 15px;
    paint-order: stroke;
  }

  &[phx-click="place_unit"],
  &[phx-click="select_tile"] {
    cursor: pointer;

    svg {
      stroke: rgba(255,255,255,.25);
      stroke-width: 15px;
      paint-order: stroke;
    }

    &:hover {
      transform: scale(1.1);
    }
  }

  &[phx-click="start_move"] {
    svg {
      filter: drop-shadow(0 0 3px rgba(255, 255, 255, .75)) drop-shadow(0 0 5px rgba(0, 128, 0, 1));
    }
  }

  &[phx-click="attack"] {
    svg {
      filter: drop-shadow(0 0 3px rgba(255, 255, 255, .75)) drop-shadow(0 0 5px rgba(255, 0, 0, 1));
    }
  }
}

.TileCenter {
  background-color: #aaa;
  border-radius: 50%;
  display: block;
  width: 35px;
  height: 35px;
  text-align: center;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -40%);
  line-height: 32px;
  border: 3px solid rgba(0,0,0,.25);
  font-weight: bold;
  font-size: 18px;
  text-shadow: 0 1px 1px rgba(0,0,0,.5);
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.player-bg-1 { background-color: $player-1-color; }
.player-bg-2 { background-color: $player-2-color; }
.player-bg-3 { background-color: $player-3-color; }
.player-bg-4 { background-color: $player-4-color; }
.player-bg-5 { background-color: $player-5-color; }
.player-bg-6 { background-color: $player-6-color; }
.player-bg-7 { background-color: $player-7-color; }
.player-bg-8 { background-color: $player-8-color; }

.region-1 svg { fill: #493829; }
.region-2 svg { fill: #816c5b; }
.region-3 svg { fill: #404f24; }
.region-4 svg { fill: #613318; }
.region-5 svg { fill: #bdd09f; }
.region-6 svg { fill: #b99c6b; }
.region-7 svg { fill: #dbca69; }
.region-8 svg { fill: #a9a18c; }
.region-9 svg { fill: #855723; }
.region-10 svg { fill: #eae2b7; }

.region-ownedby-1 svg { stroke: $player-1-color; }
.region-ownedby-2 svg { stroke: $player-2-color; }
.region-ownedby-3 svg { stroke: $player-3-color; }
.region-ownedby-4 svg { stroke: $player-4-color; }
.region-ownedby-5 svg { stroke: $player-5-color; }
.region-ownedby-6 svg { stroke: $player-6-color; }
.region-ownedby-7 svg { stroke: $player-7-color; }
.region-ownedby-8 svg { stroke: $player-8-color; }

.Regions {
  list-style: none;
  padding: 0;
  display: flex;
  flex-wrap: wrap;
}

.Region {
  position: relative;
  flex-basis: 25%;

  &-value {
    position: absolute;
    font-size: 18px;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-weight: bold;
    text-shadow: 0 1px 1px rgba(0,0,0,.5);
  }

  svg {
    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, .25));
    overflow: visible;
    stroke-width: 25px;
    paint-order: stroke;
  }
}

.Modal {
  background: rgba($black, .75);
  position: fixed;
  top: 0;
  width: 80%;
  left: 20%;
  z-index: $z-index-overlay;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.GameOver {
  color: $white;
  font-weight: bold;
  text-shadow: 0 1px 2px $black;
}

.Button {
  border: 0;
  padding: .5em;
  font: inherit;
  border-radius: .25em;
  color: $white;
  box-shadow: 0 1px 3px rgba(0, 0, 0, .25);
  transition: all .1s ease-in;
  cursor: pointer;
  display: block;
  width: 100%;
  text-align: center;
  background-color: $gray;
  text-decoration: none;

  &:hover,
  &:focus {
    background-color: lighten($gray, 5%);
  }

  &:disabled {
    color: rgba(255, 255, 255, .5);
    cursor: not-allowed;
  }

  &--big {
    padding: .5em;
  }

  &--primary {
    background-color: $red;

    &:hover,
    &:focus {
      background-color: lighten($red, 5%);
    }
  }
}

.Logo {
  display: block;
  width: 200px;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  position: relative;
  z-index: $z-index-logo;
}

.Game {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.Display {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 20%;
  background-color: rgba(0, 0, 0, .5);
  padding: 0 1em;
  overflow: auto;

  & > * {
    margin: 1em auto;
  }
}

.Board {
  position: absolute;
  top: 0;
  left: 20%;
  width: 80%;
  height: 100%;
}

.BorderRadio {
  &-input {
    display: none;
  }

  &-label {
    display: block;
    padding: 1em;
    border-radius: .25em;
    border: 1px solid transparent;
    margin-bottom: .5em;
    transition: all .2s ease-in;
    cursor: pointer;

    .BorderRadio-input:checked + & {
      border-color: rgba(255, 255, 255, .75);
      box-shadow: 0 0 5px rgba(255, 255, 255, .5);
      background-color: rgba(255, 255, 255, .05);
    }
  }
}

.MoveForm {
  min-width: 50%;

  &-slider {
    display: flex;
    font-size: 4em;
    text-shadow: 0 1px 3px $black;

    & > * {
      margin: .5em;
    }
  }

  &-input {
    flex-grow: 1;
    width: 100%;
  }

  &-actions {
    display: flex;
    justify-content: space-between;
    // The "Submit" button must be first in the DOM so that itâ€™s
    // triggered on pressing [Enter], but it should appear last
    // in the row, hence the reversed order.
    flex-direction: row-reverse;

    & > * {
      white-space: nowrap;
      margin-right: 1em;

      &:first-child {
        margin-right: 0;
      }
    }
  }
}

.NewGameForm {
  display: flex;

  & > * {
    flex-grow: 1;
    flex-basis: 0;
    padding: 0 2em;
  }
}

.ComboInput {
  display: flex;

  &-input {
    font-size: inherit;
    padding: .5em;
    border-radius: .25em 0 0 .25em;
    border: 0;
    box-shadow: inset 0 1px 1px rgba(0,0,0,.25);
    width: 75%;
  }

  &-button {
    padding: .5em;
    border-radius: 0 .25em .25em 0;
    width: 25%;
  }
}

.visually-hidden {
  position: absolute;
  left: -9999px;
}

.alert {
  color: #fff;
  background-color: rgba(0,0,0,.1);
  padding: .5em;
  border-radius: .25em;
  border: 1px solid rgba(0,0,0,.25);
}

.text-center {
  text-align: center;
}

.opacity-25 {
  opacity: 0.25;
}

// Board Builder
[phx-click="toggle_tile"],
[phx-click="select_region"] {
  cursor: pointer;
}
